library(ggplot2)
library(lme4)
library(lmerTest)
library(tidyr)
library(tidyverse)
data<-read_csv(here("data_raw", "data_raw.csv"))
library(here)
data<-read_csv(here("data_raw", "data_raw.csv"))
data$tone <- ifelse(data$key_resp_4.keys=="d",1,0)
data <- data %>%
separate(sound, c("item1", "item2"), sep="/") %>%
separate(item2, c("item", "factor", "step"), sep = "_")
data<-data[!data$participant %in% c("NF01"),]
data$participant <- gsub("N","",data$participant)
data$step <- gsub(".wav", "", data$step)
data$step <- gsub("step", "", data$step)
data <- data[,-c(1:3)]
glimpse(data)
## Plot
align<-data[data$factor=="peak",]
shape<-data[data$factor=="shape",]
align %>%
ggplot() +
aes(x = as.numeric(step), y = tone) +
geom_hline(yintercept = 0.5,  color='grey50', size=0.7)+
stat_summary(fun = mean, geom = "line", color = "brown2", size=2.2)+
stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = .2) +
#stat_summary(fun = mean_cl_normal,  geom = "ribbon", fill = "brown2", alpha=.1)+
stat_summary(fun = mean, geom = "point", size = 4, fill='white', color = "brown2",
stroke = 1.5, pch = 21) +
coord_cartesian(ylim = c(0, 1))+
theme_bw()+
theme(#text=element_text(family="Times"),
axis.text.x = element_text(size=13,color = "black", family="Times New Roman"),
axis.text.y = element_text(size=11,color = "black",family="Times New Roman"),
plot.title = element_text(size=16, face = "bold", hjust=0.5,family="Times New Roman"),
axis.title.x = element_text(size=15,face="bold",family="Times New Roman"),
axis.title.y = element_text(size=15,face="bold",family="Times New Roman"),
strip.text.x = element_text(size = 14, family="Times New Roman",color = "black"))+
labs(x = "Steps", y = "H response (%)")+
ggtitle("Peak alignment by item") +
facet_grid(.~item)
install.packages("linguisticsdown")
# Latest
#install.packages("remotes")
remotes::install_github("liao961120/linguisticsdown")
# Latest
#install.packages("remotes")
remotes::install_github("liao961120/linguisticsdown")
library(linguisticsdown)
linguisticsdown::writeIPA()
linguisticsdown::writeIPA()
linguisticsdown::writeIPA()
tb1 <- data.table::
tb1
tb1 <- data.table::
tb1 <- data.table
tb1 <- data.frame()
tb1$Word <- c("/kan/", "/pam/", "/pal")
tb1$Word <- c("/kan/", "/pam/", "/pal/")
tb1 <- data.frame(c("/kan/", "/pam/", "/pal/") )
tb1
tb1 <- data.frame(Word = c("/kan/", "/pam/", "/pal/"),
Tone type = c("H", "LH"))
tb1
tb1 <- data.frame(Word = c("/kan/", "/pam/", "/pal/"),
Tone type = c("H", "LH"))
tb1 <- data.frame(Word = c("/kan/", "/pam/", "/pal/"),
Tone_type = c("H", "LH"))
tb1
tb1 <- data.frame(nrow=3,ncol=3))
tb1 <- data.frame(nrow=3,ncol=3)
tb1
tb1 <- data.frame(col1 = c(1:7),
col2 = LETTERS[1:7],
col3 = letters[1:7])
tb1
tb1 <- data.frame(col1 = c("/kan/","/kan/", "/pam/","/pam/", "/pal/","/pal/")
col2 = c("H", "LH","H", "LH","H", "LH"),
tb1 <- data.frame(col1 = c("kan","kan", "pam","pam", "pal","pal")
col2 = c("H", "LH","H", "LH","H", "LH"),
tb1 <- data.frame(col1 = c("kan","kan", "pam","pam", "pal","pal"),
col2 = c("H", "LH","H", "LH","H", "LH"),
col3 = c("taste","liver","night","chestnut","foot","shade"))
tb1
tb1 <- data.frame(col1 = c("/kan/","kan", "pam","pam", "pal","pal"),
col2 = c("H", "LH","H", "LH","H", "LH"),
col3 = c("taste","liver","night","chestnut","foot","shade"))
tb1
tb1 <- data.frame(col1 = c("/kan/","/kan/", "/pam/","/pam/", "/pal/","/pal/"),
col2 = c("H", "LH","H", "LH","H", "LH"),
col3 = c("taste","liver","night","chestnut","foot","shade"))
colnames(tb1)
colnames(tb1) <- c("Word", "Tone", "Meaning")
tb1
library(knitr)
kable(tb1)
tb1 <- data.frame("Word" = c("/kan/","/kan/", "/pam/","/pam/", "/pal/","/pal/"),
"Tone" = c("H", "LH","H", "LH","H", "LH"),
"Meaning" = c("taste","liver","night","chestnut","foot","shade"))
tb1
tb1 <- data.frame("Word" = c("/kan/","/kan/", "/pam/","/pam/", "/pal/","/pal/"),
"Tone" = c("H", "LH","H", "LH","H", "LH"),
"Meaning" = c("taste","liver","night","chestnut","foot","shade"))
View(align)
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
data<-read_csv(here("data_raw", "data_raw.csv"))
data$tone <- ifelse(data$key_resp_4.keys=="d",1,0)
data <- data %>%
separate(sound, c("item1", "item2"), sep="/") %>%
separate(item2, c("item", "factor", "step"), sep = "_")
data<-data[!data$participant %in% c("NF01"),]
data$participant <- gsub("N","",data$participant)
library(ggplot2)
library(lme4)
library(lmerTest)
library(tidyr)
library(tidyverse)
library(here)
data<-read_csv(here("data_raw", "data_raw.csv"))
data$tone <- ifelse(data$key_resp_4.keys=="d",1,0)
data <- data %>%
separate(sound, c("item1", "item2"), sep="/") %>%
separate(item2, c("item", "factor", "step"), sep = "_")
data<-data[!data$participant %in% c("NF01"),]
data$participant <- gsub("N","",data$participant)
data$step <- gsub(".wav", "", data$step)
data$step <- gsub("step", "", data$step)
data <- data[,-c(1:3)]
glimpse(data)
## Plot
align<-data[data$factor=="peak",]
shape<-data[data$factor=="shape",]
# Save the clean data
write_csv(align, here("data_clean", "data_align.csv"))
# Save the clean data
write_csv(data=align, here("data_clean", "data_align.csv"))
# Save the clean data
write_csv(align, here("data_tidy", "data_align.csv"))
write_csv(shape, here("data_tidy", "data_shape.csv"))
# Shape_across speakers
align %>%
ggplot() +
aes(x = as.numeric(step), y = tone) +
geom_hline(yintercept = 0.5,  color='grey50', size=0.7)+
stat_summary(fun = mean, geom = "line", color = "brown2", size=2.2)+
stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = .2) +
#stat_summary(fun = mean_cl_normal,  geom = "ribbon", fill = "brown2", alpha=.1)+
stat_summary(fun = mean, geom = "point", size = 4, fill='white', color = "brown2",
stroke = 1.5, pch = 21) +
coord_cartesian(ylim = c(0, 1))+
theme_bw()+
theme(#text=element_text(family="Times"),
axis.text.x = element_text(size=13,color = "black", family="Times New Roman"),
axis.text.y = element_text(size=11,color = "black",family="Times New Roman"),
plot.title = element_text(size=16, face = "bold", hjust=0.5,family="Times New Roman"),
axis.title.x = element_text(size=15,face="bold",family="Times New Roman"),
axis.title.y = element_text(size=15,face="bold",family="Times New Roman"),
strip.text.x = element_text(size = 14, family="Times New Roman",color = "black"))+
labs(x = "Steps", y = "H response (%)")+
ggtitle("Peak alignment by item") +
facet_grid(.~item)
## Shape by subject
align %>%
ggplot() +
aes(x = as.numeric(step), y = tone) +
geom_hline(yintercept = 0.5,  color='grey50', size=0.7)+
stat_summary(fun = mean, geom = "line", color = "brown2", size=2.2)+
stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = .2) +
#stat_summary(fun = mean_cl_normal,  geom = "ribbon", fill = "brown2", alpha=.1)+
stat_summary(fun = mean, geom = "point", size = 4, fill='white', color = "brown2",
stroke = 1.5, pch = 21) +
coord_cartesian(ylim = c(0, 1))+
theme_bw()+
theme(#text=element_text(family="Times"),
axis.text.x = element_text(size=13,color = "black", family="Times New Roman"),
axis.text.y = element_text(size=11,color = "black",family="Times New Roman"),
plot.title = element_text(size=16, face = "bold", hjust=0.5,family="Times New Roman"),
axis.title.x = element_text(size=15,face="bold",family="Times New Roman"),
axis.title.y = element_text(size=15,face="bold",family="Times New Roman"),
strip.text.x = element_text(size = 14, family="Times New Roman",color = "black"))+
labs(x = "Steps", y = "H response (%)")+
facet_grid(.~item)
align %>%
ggplot() +
aes(x = as.numeric(step), y = tone) +
geom_hline(yintercept = 0.5,  color='grey50', size=0.7)+
stat_summary(fun = mean, geom = "line", color = "brown2", size=2.2)+
stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = .2) +
#stat_summary(fun = mean_cl_normal,  geom = "ribbon", fill = "brown2", alpha=.1)+
stat_summary(fun = mean, geom = "point", size = 4, fill='white', color = "brown2",
stroke = 1.5, pch = 21) +
coord_cartesian(ylim = c(0, 1))+
theme_bw()+
theme(#text=element_text(family="Times"),
axis.text.x = element_text(size=11,color = "black", family="Times New Roman"),
axis.text.y = element_text(size=10,color = "black",family="Times New Roman"),
plot.title = element_text(size=16, face = "bold", hjust=0.5,family="Times New Roman"),
axis.title.x = element_text(size=15,face="bold",family="Times New Roman"),
axis.title.y = element_text(size=15,face="bold",family="Times New Roman"),
strip.text.x = element_text(size = 12, family="Times New Roman",color = "black"))+
labs(x = "Steps", y = "H response (%)") +
ggtitle("Peak alignment by Subject") +
#facet_grid(.~item)
facet_wrap(.~participant, nrow=3)
align %>%
ggplot() +
aes(x = as.numeric(step), y = tone) +
geom_hline(yintercept = 0.5,  color='grey50', size=0.7)+
stat_summary(fun = mean, geom = "line", color = "brown2", size=2.2)+
stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = .2) +
#stat_summary(fun = mean_cl_normal,  geom = "ribbon", fill = "brown2", alpha=.1)+
stat_summary(fun = mean, geom = "point", size = 4, fill='white', color = "brown2",
stroke = 1.5, pch = 21) +
coord_cartesian(ylim = c(0, 1))+
theme_bw()+
theme(#text=element_text(family="Times"),
axis.text.x = element_text(size=11,color = "black", family="Times New Roman"),
axis.text.y = element_text(size=10,color = "black",family="Times New Roman"),
plot.title = element_text(size=16, face = "bold", hjust=0.5,family="Times New Roman"),
axis.title.x = element_text(size=15,face="bold",family="Times New Roman"),
axis.title.y = element_text(size=15,face="bold",family="Times New Roman"),
strip.text.x = element_text(size = 12, family="Times New Roman",color = "black"))+
labs(x = "Steps", y = "H response (%)") +
facet_wrap(.~participant, nrow=3)
# Peak alignment_across speakers
align %>%
ggplot() +
aes(x = as.numeric(step), y = tone) +
geom_hline(yintercept = 0.5,  color='grey50', size=0.7)+
stat_summary(fun = mean, geom = "line", color = "brown2", size=2.2)+
stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = .2) +
#stat_summary(fun = mean_cl_normal,  geom = "ribbon", fill = "brown2", alpha=.1)+
stat_summary(fun = mean, geom = "point", size = 4, fill='white', color = "brown2",
stroke = 1.5, pch = 21) +
coord_cartesian(ylim = c(0, 1))+
theme_bw()+
theme(#text=element_text(family="Times"),
axis.text.x = element_text(size=13,color = "black", family="Times New Roman"),
axis.text.y = element_text(size=11,color = "black",family="Times New Roman"),
plot.title = element_text(size=16, face = "bold", hjust=0.5,family="Times New Roman"),
axis.title.x = element_text(size=15,face="bold",family="Times New Roman"),
axis.title.y = element_text(size=15,face="bold",family="Times New Roman"),
strip.text.x = element_text(size = 14, family="Times New Roman",color = "black"))+
labs(x = "Steps", y = "H response (%)")
## Peak alignment by Item
align %>%
ggplot() +
aes(x = as.numeric(step), y = tone) +
geom_hline(yintercept = 0.5,  color='grey50', size=0.7)+
stat_summary(fun = mean, geom = "line", color = "brown2", size=2.2)+
stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = .2) +
#stat_summary(fun = mean_cl_normal,  geom = "ribbon", fill = "brown2", alpha=.1)+
stat_summary(fun = mean, geom = "point", size = 4, fill='white', color = "brown2",
stroke = 1.5, pch = 21) +
coord_cartesian(ylim = c(0, 1))+
theme_bw()+
theme(#text=element_text(family="Times"),
axis.text.x = element_text(size=13,color = "black", family="Times New Roman"),
axis.text.y = element_text(size=11,color = "black",family="Times New Roman"),
plot.title = element_text(size=16, face = "bold", hjust=0.5,family="Times New Roman"),
axis.title.x = element_text(size=15,face="bold",family="Times New Roman"),
axis.title.y = element_text(size=15,face="bold",family="Times New Roman"),
strip.text.x = element_text(size = 14, family="Times New Roman",color = "black"))+
labs(x = "Steps", y = "H response (%)")+
facet_grid(.~item)
# Font
library('showtext')
font_add_google('Times New Roman', 'Times New Roman')
# Font
library('showtext')
showtext_auto()
# Peak alignment_across speakers
align %>%
ggplot() +
aes(x = as.numeric(step), y = tone) +
geom_hline(yintercept = 0.5,  color='grey50', size=0.7)+
stat_summary(fun = mean, geom = "line", color = "brown2", size=2.2)+
stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = .2) +
#stat_summary(fun = mean_cl_normal,  geom = "ribbon", fill = "brown2", alpha=.1)+
stat_summary(fun = mean, geom = "point", size = 4, fill='white', color = "brown2",
stroke = 1.5, pch = 21) +
coord_cartesian(ylim = c(0, 1))+
theme_bw()+
theme(#text=element_text(family="Times"),
axis.text.x = element_text(size=13,color = "black", family="Times New Roman"),
axis.text.y = element_text(size=11,color = "black",family="Times New Roman"),
plot.title = element_text(size=16, face = "bold", hjust=0.5,family="Times New Roman"),
axis.title.x = element_text(size=15,face="bold",family="Times New Roman"),
axis.title.y = element_text(size=15,face="bold",family="Times New Roman"),
strip.text.x = element_text(size = 14, family="Times New Roman",color = "black"))+
labs(x = "Steps", y = "H response (%)")
font_add_google('Times New Roman', 'Times New Roman')
showtext_auto()
# Peak alignment_across speakers
align %>%
ggplot() +
aes(x = as.numeric(step), y = tone) +
geom_hline(yintercept = 0.5,  color='grey50', size=0.7)+
stat_summary(fun = mean, geom = "line", color = "brown2", size=2.2)+
stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = .2) +
#stat_summary(fun = mean_cl_normal,  geom = "ribbon", fill = "brown2", alpha=.1)+
stat_summary(fun = mean, geom = "point", size = 4, fill='white', color = "brown2",
stroke = 1.5, pch = 21) +
coord_cartesian(ylim = c(0, 1))+
theme_bw()+
theme(#text=element_text(family="Times"),
axis.text.x = element_text(size=13,color = "black", family="Times New Roman"),
axis.text.y = element_text(size=11,color = "black",family="Times New Roman"),
plot.title = element_text(size=16, face = "bold", hjust=0.5,family="Times New Roman"),
axis.title.x = element_text(size=15,face="bold",family="Times New Roman"),
axis.title.y = element_text(size=15,face="bold",family="Times New Roman"),
strip.text.x = element_text(size = 14, family="Times New Roman",color = "black"))+
labs(x = "Steps", y = "H response (%)")
## Peak alignment by Item
align %>%
ggplot() +
aes(x = as.numeric(step), y = tone) +
geom_hline(yintercept = 0.5,  color='grey50', size=0.7)+
stat_summary(fun = mean, geom = "line", color = "brown2", size=2.2)+
stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = .2) +
#stat_summary(fun = mean_cl_normal,  geom = "ribbon", fill = "brown2", alpha=.1)+
stat_summary(fun = mean, geom = "point", size = 4, fill='white', color = "brown2",
stroke = 1.5, pch = 21) +
coord_cartesian(ylim = c(0, 1))+
theme_bw()+
theme(#text=element_text(family="Times"),
axis.text.x = element_text(size=13,color = "black", family="Times New Roman"),
axis.text.y = element_text(size=11,color = "black",family="Times New Roman"),
plot.title = element_text(size=16, face = "bold", hjust=0.5,family="Times New Roman"),
axis.title.x = element_text(size=15,face="bold",family="Times New Roman"),
axis.title.y = element_text(size=15,face="bold",family="Times New Roman"),
strip.text.x = element_text(size = 14, family="Times New Roman",color = "black"))+
labs(x = "Steps", y = "H response (%)")+
facet_grid(.~item)
# Peak alignment_across speakers
align %>%
ggplot() +
aes(x = as.numeric(step), y = tone) +
geom_hline(yintercept = 0.5,  color='grey50', size=0.7)+
stat_summary(fun = mean, geom = "line", color = "brown2", size=2.2)+
stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = .2) +
#stat_summary(fun = mean_cl_normal,  geom = "ribbon", fill = "brown2", alpha=.1)+
stat_summary(fun = mean, geom = "point", size = 4, fill='white', color = "brown2",
stroke = 1.5, pch = 21) +
coord_cartesian(ylim = c(0, 1))+
theme_bw()+
theme(#text=element_text(family="Times"),
axis.text.x = element_text(size=13,color = "black", family="Times New Roman"),
axis.text.y = element_text(size=11,color = "black",family="Times New Roman"),
plot.title = element_text(size=16, face = "bold", hjust=0.5,family="Times New Roman"),
axis.title.x = element_text(size=15,face="bold",family="Times New Roman"),
axis.title.y = element_text(size=15,face="bold",family="Times New Roman"),
strip.text.x = element_text(size = 14, family="Times New Roman",color = "black"))+
labs(x = "Steps", y = "H response (%)")
# Font
library('showtext')
showtext_auto()
# Peak alignment_across speakers
align %>%
ggplot() +
aes(x = as.numeric(step), y = tone) +
geom_hline(yintercept = 0.5,  color='grey50', size=0.7)+
stat_summary(fun = mean, geom = "line", color = "brown2", size=2.2)+
stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = .2) +
#stat_summary(fun = mean_cl_normal,  geom = "ribbon", fill = "brown2", alpha=.1)+
stat_summary(fun = mean, geom = "point", size = 4, fill='white', color = "brown2",
stroke = 1.5, pch = 21) +
coord_cartesian(ylim = c(0, 1))+
theme_bw()+
theme(#text=element_text(family="Times"),
axis.text.x = element_text(size=13,color = "black", family="Times New Roman"),
axis.text.y = element_text(size=11,color = "black",family="Times New Roman"),
plot.title = element_text(size=16, face = "bold", hjust=0.5,family="Times New Roman"),
axis.title.x = element_text(size=15,face="bold",family="Times New Roman"),
axis.title.y = element_text(size=15,face="bold",family="Times New Roman"),
strip.text.x = element_text(size = 14, family="Times New Roman",color = "black"))+
labs(x = "Steps", y = "H response (%)")
df <- data[data$factor=="shape"|data$factor=="peak",]
## Stat_01
df_wide <- df %>%
pivot_wider(names_from = factor,
values_from = step)
df_wide$peak <- as.numeric(df_wide$peak)
df_wide$shape <- as.numeric(df_wide$shape)
align_wide<-data[data$factor=="peak",]
df_wide_align <- align %>%
pivot_wider(names_from = factor,
values_from = step)
df_wide_shape <- shape %>%
pivot_wider(names_from = factor,
values_from = step)
df_wide_align$peak <- as.numeric(df_wide_align$peak)
df_wide_shape$shape <- as.numeric(df_wide_shape$shape)
mod_pk_1 <- glmer(tone ~ peak + (1+peak|participant) + (1+peak|item), family = "binomial", df_wide_align)
pk_stat<-summary(mod_pk_1)
pk_stat_trim<-round(pk_stat$coefficients,3)
pk_stat_add<-rbind(colnames(pk_stat_trim),pk_stat_trim)
pk_stat_com<-rbind(pk_stat$call, pk_stat_add)
mod_sp_1 <- glmer(tone ~ shape + (1+shape|participant)+ (1+shape|item), family = "binomial", df_wide_shape)
mod_sp_2 <- glmer(tone ~ shape + (1+shape|participant)+ (1|item), family = "binomial", df_wide_shape)
sp_stat_2<-summary(mod_sp_2)
sp_stat_2_trim<-round(sp_stat_2$coefficients,3)
sp_stat_2_add<-rbind(colnames(sp_stat_2_trim),sp_stat_2_trim)
sp_stat_2_com<-rbind(sp_stat_2$call, sp_stat_2_add)
sp_stat_3<-summary(mod_sp_3)
sp_stat_3_trim<-round(sp_stat_3$coefficients,3)
sp_stat_3_add<-rbind(colnames(sp_stat_3_trim),sp_stat_3_trim)
sp_stat_3_com<-rbind(sp_stat_3$call, sp_stat_3_add)
stat_all <- rbind(pk_stat_com, sp_stat_2_com, sp_stat_3_com)
write.csv(stat_all,"stat_all.csv",row.names=T)
df_wide_align$peak <- as.numeric(df_wide_align$peak)
df_wide_shape$shape <- as.numeric(df_wide_shape$shape)
mod_pk_1 <- glmer(tone ~ peak + (1+peak|participant) + (1+peak|item), family = "binomial", df_wide_align)
pk_stat<-summary(mod_pk_1)
pk_stat_trim<-round(pk_stat$coefficients,3)
pk_stat_add<-rbind(colnames(pk_stat_trim),pk_stat_trim)
pk_stat_com<-rbind(pk_stat$call, pk_stat_add)
mod_sp_1 <- glmer(tone ~ shape + (1+shape|participant)+ (1+shape|item), family = "binomial", df_wide_shape)
mod_sp_2 <- glmer(tone ~ shape + (1+shape|participant)+ (1|item), family = "binomial", df_wide_shape)
sp_stat_2<-summary(mod_sp_2)
sp_stat_2_trim<-round(sp_stat_2$coefficients,3)
sp_stat_2_add<-rbind(colnames(sp_stat_2_trim),sp_stat_2_trim)
sp_stat_2_com<-rbind(sp_stat_2$call, sp_stat_2_add)
sp_stat_3<-summary(mod_sp_3)
stat_all <- rbind(pk_stat_com, sp_stat_2_com)
write_csv(stat_all, here("data_tidy", "stat.csv"))
write.csv(stat_all,"stat.csv",row.names=T)
write.csv(pk_stat_com,"stat_peak.csv",row.names=T)
write.csv(sp_stat_2_com,"stat_shape.csv",row.names=T)
Participants saw visual stimuli through a laptop and heard sound stimuli using a headphone (Sony MDR-7509) in a sound-proof booth in Ulsan, South Korea. A two-alternative forced choice experiment was carried out using Psychopy (Peirce 2009). Before the experimental session, the participants had a short training session to become familiarized with the experimental settings. In the main experiment, for each trial, they were asked to look at the visual stimuli on the screen upon hearing the sound stimuli and responded by pressing the button of the visual target that matched the target word. Visual stimuli were presented with two different images for a homophone pair (e.g., for the word /pam/, 'night' on the left and 'chestnut' on the right for /pam/) on the screen, as shown in Figure 5. In each task, 120 target were used to see the effect of peak alignment and rise shape: 2 factors (5 f0 peak alignments + 5 f0 rise shapes) x 3 items (/kan/ for taste and liver, /pam/ for night and chestnut, /pal/ for foot and shade) x 4 repetitions. In order to mask the purpose of this study, 180 filler stimuli were added: the combinations of the target words and 10 items differing either onset or coda from the target words (/kam/, /kang/, /pan/, /pang/, /tan/, /nan/, /nam/, /tam/, / khal/, /tal/). A total of 300 stimuli were presented in the study. The four blocks (repetitions) were presented in a randomized order, with an interval between the blocks (1st interval: 30 sec, 2nd interval: 5 mins, and 3rd interval: 30 sec). Among the 22 subjects, one participant was excluded due to the wrong responses.
